services:
  # 1) Kafka (KRaft ÂçïÊú∫)
  kafka:
    image: apache/kafka:4.1.0 
    container_name: kafka
    ports: ["9092:9092","19092:19092"]
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: "INTERNAL://0.0.0.0:9092,EXTERNAL://0.0.0.0:19092,CONTROLLER://0.0.0.0:9093"
      KAFKA_ADVERTISED_LISTENERS: "INTERNAL://kafka:9092,EXTERNAL://172.31.11.228:19092"
      KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_INTER_BROKER_LISTENER_NAME: "INTERNAL"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT"
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_LOG_DIRS: /var/lib/kafka/data
      CLUSTER_ID: "5L6g3nShT-eMCtK--X86sw"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_NUM_PARTITIONS: 12
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_HEAP_OPTS: "-Xms256M -Xmx256M"
    volumes:
      - ./mount_datas/kafka_data:/var/lib/kafka/data


  kafka-init:
    image: apache/kafka:4.1.0
    container_name: kafka-init
    depends_on:
      - kafka
    entrypoint: >
      bash -c "
        echo '‚è≥ waiting for Kafka...';
        # Á≠âÂæÖ Kafka ÁõëÂê¨Á´ØÂè£ÂºÄÊîæ
        for i in {1..30}; do nc -z kafka 9092 && break || sleep 2; done;
        echo 'üìå creating topics...';
        /opt/kafka/bin/kafka-topics.sh --create --if-not-exists --bootstrap-server kafka:9092 --topic app_logs.prod --partitions 12 --replication-factor 1;
        echo '‚úÖ done.';
      "

  # 2) clickhouse

  # 3) ElasticsearchÔºàÊºîÁ§∫ÂÖ≥Èó≠ÂÆâÂÖ®Ôºâ
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.2-amd64
    container_name: es
    ports: ["9200:9200"]
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
    volumes:
      - ./mount_datas/es_data:/usr/share/elasticsearch/data

  # 4) Kibana
  kibana:
    image: docker.elastic.co/kibana/kibana:8.12.2-amd64
    container_name: kib
    ports: ["5601:5601"]
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on: [elasticsearch]

  # 5) Kafka ConnectÔºàÂÜÖÁΩÆ ES Sink Êèí‰ª∂Ôºâ
  connect:
    image: ghcr.io/johankoi91/log-pipeline-connect:amd64-pre
    platform: linux/amd64
    container_name: connect
    ports: ["8801:8801","8083:8083"]
    environment:
      CONNECT_BOOTSTRAP_SERVERS: "kafka:9092"
      CONNECT_REST_PORT: 8083
      CONNECT_REST_ADVERTISED_HOST_NAME: "connect"   
      CONNECT_REST_ADVERTISED_PORT: "8083"           
      CONNECT_GROUP_ID: "connect-cluster-1"
      CONNECT_CONFIG_STORAGE_TOPIC: "_connect-configs"
      CONNECT_OFFSET_STORAGE_TOPIC: "_connect-offsets"
      CONNECT_STATUS_STORAGE_TOPIC: "_connect-status"
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_KEY_CONVERTER: "org.apache.kafka.connect.storage.StringConverter"
      CONNECT_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE: "false"
      CONNECT_PLUGIN_PATH: "/usr/share/java,/usr/share/confluent-hub-components"
      CONNECT_LOG4J_LOGGERS: "org.reflections=ERROR"
    volumes:
      - ./kafka-connector/go-pipeline-server/config.yaml:/app/config.yaml:ro
      - ./kafka-connector/go-pipeline-server/connect:/app/static/connect
      - ./kafka-connector/go-pipeline-server/elasticsearch:/app/static/elasticsearch
      - ./kafka-connector/log-adm/dist/client-config.json:/app/static/client-config.json
    depends_on: [kafka, elasticsearch]
   # 6) Fluent BitÔºàÈááÈõÜ‰ª£ÁêÜÔºâ
  fluent-bit:
    image: fluent/fluent-bit:2.1
    container_name: fb
    volumes:
      - ./fluent-bit/fluent-bit.conf:/fluent-bit/etc/fluent-bit.conf:ro
      - ./fluent-bit/parsers.conf:/fluent-bit/etc/parsers.conf:ro
      - ./fluent-bit/compose_key.lua:/fluent-bit/etc/compose_key.lua:ro
      - ./mount_datas/fb_db:/var/lib/fluent-bit
      - /data/rtc-logs:/data/rtc-logs:ro
    ports: ["2020:2020"]
    command: ["/fluent-bit/bin/fluent-bit","-c","/fluent-bit/etc/fluent-bit.conf"]
